openapi: 3.0.3
info:
  title: Swagger Social Network - OpenAPI 3.0
  description: |-
    Social Network sample API design.
  version: 1.0.0
servers:
  - url: https://socialnetwork.com/api/v1
tags:
  - name: publication
    description: Operations on user publications.
  - name: user
    description: Operations on users.
paths:
  /publication:
    post:
      tags:
        - publication
      summary: Crete new publication.
      description: Create new publication
      operationId: createPublication
      requestBody:
        description: Crete new publication.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Publication'
        required: true
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid input
  /publication{id}:
    get:
      tags:
        - publication
      summary: Get publication info.
      description: Get publication info by ID.
      operationId: getPublication
      parameters:
        - name: id
          in: path
          description: 'Publication ID that needs to be fetched.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publication'      
        '400':
          description: Invalid input
  /publication{id}/comment:
    post:
      tags:
        - publication
      summary: Crete new comment.
      description: Create new comment
      operationId: createComment
      parameters:
        - name: id
          in: path
          description: 'Publication ID to create comment for.'
          required: true
          schema:
            type: string
      requestBody:
        description: Crete new comment.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid input
    get:
      tags:
        - publication
      summary: List all publication comments.
      description: List all publication comments.
      operationId: listComments
      parameters:
        - name: id
          in: path
          description: 'Publication ID to list comments for.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'      
        '400':
          description: Invalid input
  /publication{id}/react:
    post:
      tags:
        - publication
      summary: Crete new reaction.
      description: Create new reaction
      operationId: createReaction
      parameters:
        - name: id
          in: path
          description: 'Publication ID to create reaction for.'
          required: true
          schema:
            type: string
      requestBody:
        description: Crete new comment.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reaction'
        required: true
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid input
  /publication/uploadImage:
    post:
      tags:
        - publication
      summary: Uploads an image.
      description: 'Uploads an image and returns image URL.'
      operationId: uploadImage
      parameters:
        - name: additionalMetadata
          in: query
          description: Additional Metadata
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  imageUrl:
                    type: string
                    description: URL to uploaded image.
                required:
                  - imageUrl
              examples:
                response:
                  value:
                    imageUrl: "https://social.s3.com/42fsjk2"
  /user{id}:
    get:
      tags:
        - user
      summary: View user's profile.
      description: View user's profile by ID.
      operationId: getUser
      parameters:
        - name: id
          in: path
          description: 'User ID that needs to be fetched.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'      
        '400':
          description: Invalid input
  /user{id}/subscribe:
    post:
      tags:
        - user
      summary: Subscribe to user's updates.
      description: Subscribe to user's updates.
      operationId: subscribe
      parameters:
        - name: id
          in: path
          description: 'User ID to subscribe to.'
          required: true
          schema:
            type: string
      requestBody:
        description: Crete new subscription.
        content:
          application/json:
            schema:
              type: string
              format: uuid
              description: 'Subscriber ID'
        required: true
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid input
  /user{id}/feed:
    get:
      tags:
        - user
      summary: View publication feed for user.
      description: View user's personal publication feed.
      operationId: viewFeed
      parameters:
        - name: id
          in: path
          description: 'User ID to view feed for.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Publication'      
        '400':
          description: Invalid input
  /user{id}/feed/search:
    get:
      tags:
        - user
      summary: Search for specific publications.
      description: Search for specific publications based on filter.
      operationId: searchFeed
      parameters:
        - name: id
          in: path
          description: 'User ID to view feed for.'
          required: true
          schema:
            type: string
        - name: geoTag
          in: query
          description: 'Geo tag to search publications for.'
          required: false
          schema:
            $ref: '#/components/schemas/GeoTag'
        - name: popular
          in: query
          description: 'Popular places flag.'
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Publication'      
        '400':
          description: Invalid input
components:
  schemas:
    Publication:
      type: object
      required: [id, userId, description, photoUrls]
      properties:
        id:
          type: string
          format: uuid
          example: fcb13e47-deaf-4fda-8f53-b3a5d00c58f1
        usderId:
          type: string
          format: uuid
          example: fcb13e47-deaf-4fda-8f53-b3a5d00c58f1
        description: 
          type: string
          format: text
          example: 'Hello, world'
        photoUrls:
          type: array
          items:
            type: string
        reactions:
          type: array
          items:
            $ref: '#/components/schemas/Reaction'
        geoTag:
          $ref: '#/components/schemas/GeoTag'
    Reaction:
      type: object
      required: [code]
      properties:
        code: 
          type: integer
          format: int64
        count: 
          type: integer
          format: int64
    Comment:
      type: object
      required: [id, description]
      properties:
        id: 
          type: integer
          format: int64
        description:
          type: string
          format: text
        reactions:
          type: array
          items:
            $ref: '#/components/schemas/Reaction'
    GeoTag:
      type: object
      properties:
        x:
          type: number
          format: double
          example: 46.1324
        y:
          type: number
          format: double
          example: 46.1324
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: fcb13e47-deaf-4fda-8f53-b3a5d00c58f1
        username:
          type: string
          example: theUser
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: James
        bio:
          type: string